<html>
<head>
<title></title>
<style>

#map {
	background-color: #cccccc;
	background-image: url(images/stripes.gif);
}

</style>
</head>
<body>

<p>This goes above the map.</p>

<div id="map" style="border: 1px solid black; width: 800px; height: 400px; position: relative; overflow: hidden;"></div>

<p>And this goes below it.</p>

<script src="js/map.js"></script>
<script>

//
// This hash defines everything about the map that we need to know.
// The 'zooms' hash tells us how many tiles are in each zoom level and what the composite's offset is on those tiles.
//

var g_map_data = {
	'path' : 'tiles',
	'zooms' : {
		4 : [2, 2, 9, 62],
		3 : [4, 4, 19, 123],
		2 : [8, 7, 38, 119],
		1 : [16, 13, 76, 110]
	},
	global_start_x: 0,
	global_start_y: 0
};

////////////////////////////////////////////////////////////////////////////////////////


var g_map = new map();
var g_selected_hex = null;

window.onload = function(){

	g_map.init(g_map_data.path, g_map_data.zooms);
	g_map.create(document.getElementById('map'), 800, 400);
	g_map.set_zoom_level(3);
	g_map.center_on_pos(445, 447);


	//g_map.get_slab().appendChild(g_test);

	g_map.onpan = function(){
		// something?
	};

	g_map.onzoomchange = function(){
		// maintain selection here
	};

	g_map.onclick = function(x, y){

		// process click
	}
};


function translate_point_in(point){

	var z = g_map.zoom_level;
	var factor = Math.pow(0.5, z-1);
	
	var x = ((point[0] - g_map_data.bounds.x_lo) * factor) + g_map_data.zooms[z][2];
	var y = ((point[1] - g_map_data.bounds.y_lo) * factor) + g_map_data.zooms[z][3];

	return [x, y];
}

function translate_point_out(point){

	var z = g_map.zoom_level;
	var factor = Math.pow(0.5, z-1);

	var x = ((point[0] - g_map_data.zooms[z][2]) / factor) + g_map_data.bounds.x_lo;
	var y = ((point[1] - g_map_data.zooms[z][3]) / factor) + g_map_data.bounds.y_lo;

	return [x, y];
}


</script>

</body>
</html>